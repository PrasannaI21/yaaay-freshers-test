<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-13T16:40:56 IST" name="Suite" finished-at="2025-02-13T16:43:34 IST" duration-ms="157501">
    <groups>
    </groups>
    <test started-at="2025-02-13T16:40:56 IST" name="Test" finished-at="2025-02-13T16:43:34 IST" duration-ms="157501">
      <class name="com.zenken.freshers.company.ApplicantListCsv">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:40:56 IST" name="setup" finished-at="2025-02-13T16:40:59 IST" duration-ms="3290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvDlLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:40:59 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:42:18 IST" duration-ms="78999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvDlLink()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvDlLink()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:18 IST" name="verifyCsvDlLink" description="This test verifies that the text of the link to download the CSV file is correct" finished-at="2025-02-13T16:42:19 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvDlLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:19 IST" name="tearDown" finished-at="2025-02-13T16:42:19 IST" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:19 IST" name="setup" finished-at="2025-02-13T16:42:20 IST" duration-ms="1275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvDlPopup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:20 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:42:31 IST" duration-ms="11085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvDlPopup()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvDlPopup()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:31 IST" name="verifyCsvDlPopup" description="This test verifies that an expected popup is displayed after clicking on the CSV download link" finished-at="2025-02-13T16:42:32 IST" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvDlPopup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:32 IST" name="tearDown" finished-at="2025-02-13T16:42:32 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:32 IST" name="setup" finished-at="2025-02-13T16:42:33 IST" duration-ms="1224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvDl() throws java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:33 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:42:43 IST" duration-ms="9667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvDl()[pri:1, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvDl()[pri:1, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:43 IST" name="verifyCsvDl" description="This test verifies that the CSV file is downloaded in zip format and that the zip file name and CSV file names are correct" finished-at="2025-02-13T16:42:45 IST" duration-ms="2136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvDl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:45 IST" name="tearDown" finished-at="2025-02-13T16:42:45 IST" duration-ms="441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:45 IST" name="setup" finished-at="2025-02-13T16:42:47 IST" duration-ms="1386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvHeader1() throws java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:47 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:42:55 IST" duration-ms="8635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvHeader1()[pri:2, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvHeader1()[pri:2, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:55 IST" name="verifyCsvHeader1" description="This test verifies that the header (field names) of all extractedCSV files are correct (応募者なし)" finished-at="2025-02-13T16:42:55 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvHeader1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:55 IST" name="tearDown" finished-at="2025-02-13T16:42:56 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:56 IST" name="setup" finished-at="2025-02-13T16:42:57 IST" duration-ms="1257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvNoApplicant() throws java.io.UnsupportedEncodingException,java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:42:57 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:43:08 IST" duration-ms="11128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvNoApplicant()[pri:3, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvNoApplicant()[pri:3, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:08 IST" name="verifyCsvNoApplicant" description="This test verifies that the CSV files do not have any candidate records" finished-at="2025-02-13T16:43:08 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvNoApplicant -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:08 IST" name="tearDown" finished-at="2025-02-13T16:43:08 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:08 IST" name="setup" finished-at="2025-02-13T16:43:09 IST" duration-ms="1240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvHeader2() throws java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:09 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:43:19 IST" duration-ms="9728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvHeader2()[pri:4, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvHeader2()[pri:4, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:19 IST" name="verifyCsvHeader2" description="This test verifies that the header (field names) of all extracted CSV files are correct (応募者あり)" finished-at="2025-02-13T16:43:21 IST" duration-ms="1766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvHeader2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:21 IST" name="tearDown" finished-at="2025-02-13T16:43:21 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:21 IST" name="setup" finished-at="2025-02-13T16:43:23 IST" duration-ms="1366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.company.ApplicantListCsv.verifyCsvValues() throws java.io.UnsupportedEncodingException,java.io.FileNotFoundException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupApplicantListCsv(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:23 IST" name="setupApplicantListCsv" finished-at="2025-02-13T16:43:33 IST" duration-ms="10723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=ApplicantListCsv.verifyCsvValues()[pri:5, instance:com.zenken.freshers.company.ApplicantListCsv@821330f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupApplicantListCsv -->
        <test-method signature="verifyCsvValues()[pri:5, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:33 IST" name="verifyCsvValues" description="This test verifies that the values are updated in all CSV files after profile is updated (Company ID: 878fca2e, 応募者ID: 8)" finished-at="2025-02-13T16:43:33 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCsvValues -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.company.ApplicantListCsv@821330f]" started-at="2025-02-13T16:43:33 IST" name="tearDown" finished-at="2025-02-13T16:43:34 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.company.ApplicantListCsv -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
