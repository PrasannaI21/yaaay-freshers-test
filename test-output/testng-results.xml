<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="3" total="104" passed="97" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-28T12:03:37 IST" name="Suite" finished-at="2025-01-28T12:12:29 IST" duration-ms="531398">
    <groups>
    </groups>
    <test started-at="2025-01-28T12:03:37 IST" name="Test" finished-at="2025-01-28T12:12:29 IST" duration-ms="531398">
      <class name="com.zenken.freshers.user.Registration">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:37 IST" name="setup" finished-at="2025-01-28T12:03:40 IST" duration-ms="2243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedFirstName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:40 IST" name="setUpTest" finished-at="2025-01-28T12:03:46 IST" duration-ms="6028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedFirstName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCharExceedFirstName()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:46 IST" name="verifyCharExceedFirstName" description="This test verifies that validation error for maximum characters occurs for field: &#039;First Name&#039;" finished-at="2025-01-28T12:03:55 IST" duration-ms="9672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharExceedFirstName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:55 IST" name="tearDown" finished-at="2025-01-28T12:03:56 IST" duration-ms="494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:56 IST" name="setup" finished-at="2025-01-28T12:03:58 IST" duration-ms="1646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedLastName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:03:58 IST" name="setUpTest" finished-at="2025-01-28T12:04:05 IST" duration-ms="7477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedLastName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCharExceedLastName()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:05 IST" name="verifyCharExceedLastName" description="This test verifies that validation error for maximum characters occurs for field: &#039;Last Name&#039;" finished-at="2025-01-28T12:04:10 IST" duration-ms="5291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharExceedLastName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:10 IST" name="tearDown" finished-at="2025-01-28T12:04:13 IST" duration-ms="2137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:13 IST" name="setup" finished-at="2025-01-28T12:04:14 IST" duration-ms="1268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedMiddleName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:14 IST" name="setUpTest" finished-at="2025-01-28T12:04:19 IST" duration-ms="5356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedMiddleName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCharExceedMiddleName()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:19 IST" name="verifyCharExceedMiddleName" description="This test verifies that validation error for maximum characters occurs for field: &#039;Middle Name&#039;" finished-at="2025-01-28T12:04:26 IST" duration-ms="6547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharExceedMiddleName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:26 IST" name="tearDown" finished-at="2025-01-28T12:04:28 IST" duration-ms="2156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:28 IST" name="setup" finished-at="2025-01-28T12:04:29 IST" duration-ms="1286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedUsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:29 IST" name="setUpTest" finished-at="2025-01-28T12:04:33 IST" duration-ms="3962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCharExceedUsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCharExceedUsn()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:33 IST" name="verifyCharExceedUsn" description="This test verifies that validation error for maximum characters occurs for field: &#039;USN / Registration Number&#039;" finished-at="2025-01-28T12:04:41 IST" duration-ms="8214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharExceedUsn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:41 IST" name="tearDown" finished-at="2025-01-28T12:04:42 IST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:42 IST" name="setup" finished-at="2025-01-28T12:04:43 IST" duration-ms="1217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCheckBoxState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:43 IST" name="setUpTest" finished-at="2025-01-28T12:04:45 IST" duration-ms="2248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCheckBoxState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCheckBoxState()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:45 IST" name="verifyCheckBoxState" description="This test verifies that the checkboxes &#039;Yaaay Midcareer&#039; and &#039;Zenken Newsletter&#039; are selected by default" finished-at="2025-01-28T12:04:47 IST" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBoxState -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:47 IST" name="tearDown" finished-at="2025-01-28T12:04:47 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:47 IST" name="setup" finished-at="2025-01-28T12:04:48 IST" duration-ms="1323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCollegeRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:48 IST" name="setUpTest" finished-at="2025-01-28T12:04:54 IST" duration-ms="6272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCollegeRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCollegeRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:04:54 IST" name="verifyCollegeRequired" description="This test verifies that validation error occurs for required field: &#039;College&#039;" finished-at="2025-01-28T12:05:01 IST" duration-ms="6638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCollegeRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:01 IST" name="tearDown" finished-at="2025-01-28T12:05:01 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:01 IST" name="setup" finished-at="2025-01-28T12:05:03 IST" duration-ms="1371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCollegeSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:03 IST" name="setUpTest" finished-at="2025-01-28T12:05:06 IST" duration-ms="3531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyCollegeSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCollegeSelect()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:06 IST" name="verifyCollegeSelect" description="This test verifies that college can be selected from the dropdown" finished-at="2025-01-28T12:05:07 IST" duration-ms="989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCollegeSelect -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:07 IST" name="tearDown" finished-at="2025-01-28T12:05:07 IST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:07 IST" name="setup" finished-at="2025-01-28T12:05:09 IST" duration-ms="1298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:09 IST" name="setUpTest" finished-at="2025-01-28T12:05:13 IST" duration-ms="4571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:13 IST" name="verifyEmailRequired" description="This test verifies that validation error occurs for required field: &#039;Email&#039;" finished-at="2025-01-28T12:05:19 IST" duration-ms="5884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:19 IST" name="tearDown" finished-at="2025-01-28T12:05:19 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:19 IST" name="setup" finished-at="2025-01-28T12:05:21 IST" duration-ms="1220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyFirstNameRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:21 IST" name="setUpTest" finished-at="2025-01-28T12:05:25 IST" duration-ms="4466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyFirstNameRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyFirstNameRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:25 IST" name="verifyFirstNameRequired" description="This test verifies that validation error occurs for required field: &#039;First Name&#039;" finished-at="2025-01-28T12:05:31 IST" duration-ms="5612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstNameRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:31 IST" name="tearDown" finished-at="2025-01-28T12:05:31 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:31 IST" name="setup" finished-at="2025-01-28T12:05:32 IST" duration-ms="1223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:32 IST" name="setUpTest" finished-at="2025-01-28T12:05:36 IST" duration-ms="3477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyIncorrectPassword1()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:36 IST" name="verifyIncorrectPassword1" description="This test verifies that a validation error occurs for the &#039;Password&#039; field when fewer than 8 characters are entered" finished-at="2025-01-28T12:05:40 IST" duration-ms="4247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectPassword1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:40 IST" name="tearDown" finished-at="2025-01-28T12:05:40 IST" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:40 IST" name="setup" finished-at="2025-01-28T12:05:42 IST" duration-ms="1476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:42 IST" name="setUpTest" finished-at="2025-01-28T12:05:44 IST" duration-ms="2359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyIncorrectPassword2()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:44 IST" name="verifyIncorrectPassword2" description="This test verifies that a validation error occurs for the &#039;Password&#039; field when password entered does not contain a number" finished-at="2025-01-28T12:05:51 IST" duration-ms="6551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectPassword2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:51 IST" name="tearDown" finished-at="2025-01-28T12:05:51 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:51 IST" name="setup" finished-at="2025-01-28T12:05:53 IST" duration-ms="1800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:53 IST" name="setUpTest" finished-at="2025-01-28T12:05:56 IST" duration-ms="3394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyIncorrectPassword3()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:05:56 IST" name="verifyIncorrectPassword3" description="This test verifies that a validation error occurs for the &#039;Password&#039; field when password entered does not contain any uppercase character" finished-at="2025-01-28T12:06:02 IST" duration-ms="5754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectPassword3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:02 IST" name="tearDown" finished-at="2025-01-28T12:06:02 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:02 IST" name="setup" finished-at="2025-01-28T12:06:04 IST" duration-ms="1333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:04 IST" name="setUpTest" finished-at="2025-01-28T12:06:09 IST" duration-ms="4967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyIncorrectPassword4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyIncorrectPassword4()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:09 IST" name="verifyIncorrectPassword4" description="This test verifies that a validation error occurs for the &#039;Password&#039; field when password entered does not any special characters" finished-at="2025-01-28T12:06:14 IST" duration-ms="5032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncorrectPassword4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:14 IST" name="tearDown" finished-at="2025-01-28T12:06:14 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:14 IST" name="setup" finished-at="2025-01-28T12:06:15 IST" duration-ms="1466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInterestRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:15 IST" name="setUpTest" finished-at="2025-01-28T12:06:18 IST" duration-ms="2362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInterestRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInterestRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:18 IST" name="verifyInterestRequired" description="This test verifies that validation error occurs for required field: &#039;Are you interested in studying Japanese language?&#039;" finished-at="2025-01-28T12:06:22 IST" duration-ms="4386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInterestRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:22 IST" name="tearDown" finished-at="2025-01-28T12:06:22 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:22 IST" name="setup" finished-at="2025-01-28T12:06:24 IST" duration-ms="2021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:24 IST" name="setUpTest" finished-at="2025-01-28T12:06:28 IST" duration-ms="3369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidEmail()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:28 IST" name="verifyInvalidEmail" description="This test verifies that validation error for invalid input occurs for field: &#039;Email&#039;" finished-at="2025-01-28T12:06:37 IST" duration-ms="8780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:37 IST" name="tearDown" finished-at="2025-01-28T12:06:37 IST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:37 IST" name="setup" finished-at="2025-01-28T12:06:39 IST" duration-ms="1966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInvalidUsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:39 IST" name="setUpTest" finished-at="2025-01-28T12:06:42 IST" duration-ms="2677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyInvalidUsn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidUsn()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:42 IST" name="verifyInvalidUsn" description="This test verifies that validation error for invalid input occurs for field: &#039;USN / Registration Number&#039;" finished-at="2025-01-28T12:06:50 IST" duration-ms="7709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidUsn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:50 IST" name="tearDown" finished-at="2025-01-28T12:06:50 IST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:50 IST" name="setup" finished-at="2025-01-28T12:06:52 IST" duration-ms="1738" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyLastNameRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:52 IST" name="setUpTest" finished-at="2025-01-28T12:06:53 IST" duration-ms="1697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyLastNameRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyLastNameRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:06:53 IST" name="verifyLastNameRequired" description="This test verifies that validation error occurs for required field: &#039;Last Name&#039;" finished-at="2025-01-28T12:07:01 IST" duration-ms="7792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastNameRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:01 IST" name="tearDown" finished-at="2025-01-28T12:07:02 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:02 IST" name="setup" finished-at="2025-01-28T12:07:03 IST" duration-ms="1217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyLogInUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:03 IST" name="setUpTest" finished-at="2025-01-28T12:07:07 IST" duration-ms="4245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyLogInUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyLogInUrl()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:07 IST" name="verifyLogInUrl" description="This test verifies that user is redirected to Login page after clicking on the login link" finished-at="2025-01-28T12:07:10 IST" duration-ms="3083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogInUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:10 IST" name="tearDown" finished-at="2025-01-28T12:07:10 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:10 IST" name="setup" finished-at="2025-01-28T12:07:12 IST" duration-ms="1289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPasswordRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:12 IST" name="setUpTest" finished-at="2025-01-28T12:07:16 IST" duration-ms="4483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPasswordRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:16 IST" name="verifyPasswordRequired" description="This test verifies that validation error occurs for required field: &#039;Password&#039;" finished-at="2025-01-28T12:07:27 IST" duration-ms="10540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:27 IST" name="tearDown" finished-at="2025-01-28T12:07:29 IST" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:29 IST" name="setup" finished-at="2025-01-28T12:07:30 IST" duration-ms="1213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPlaceholders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:30 IST" name="setUpTest" finished-at="2025-01-28T12:07:32 IST" duration-ms="1719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPlaceholders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPlaceholders()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:32 IST" name="verifyPlaceholders" description="This test verifies that expected placeholders are displayed" finished-at="2025-01-28T12:07:32 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPlaceholders -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:32 IST" name="tearDown" finished-at="2025-01-28T12:07:32 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:32 IST" name="setup" finished-at="2025-01-28T12:07:33 IST" duration-ms="1305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPolicy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:33 IST" name="setUpTest" finished-at="2025-01-28T12:07:37 IST" duration-ms="3676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyPolicy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPolicy()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:37 IST" name="verifyPolicy" description="This test verifies that the link for Privacy Policy is opened in a separate tab" finished-at="2025-01-28T12:07:41 IST" duration-ms="4352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPolicy -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:41 IST" name="tearDown" finished-at="2025-01-28T12:07:42 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:42 IST" name="setup" finished-at="2025-01-28T12:07:43 IST" duration-ms="1266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyRadioSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:43 IST" name="setUpTest" finished-at="2025-01-28T12:07:46 IST" duration-ms="3051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyRadioSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyRadioSelect()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:46 IST" name="verifyRadioSelect" description="This test verifies that radio button can be selected" finished-at="2025-01-28T12:07:46 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRadioSelect -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:46 IST" name="tearDown" finished-at="2025-01-28T12:07:46 IST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:46 IST" name="setup" finished-at="2025-01-28T12:07:48 IST" duration-ms="1197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTermsAgreementRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:48 IST" name="setUpTest" finished-at="2025-01-28T12:07:50 IST" duration-ms="2482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTermsAgreementRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTermsAgreementRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:50 IST" name="verifyTermsAgreementRequired" description="This test verifies that validation error occurs for required field: &#039;I agree to the Terms and Privacy Policy&#039;" finished-at="2025-01-28T12:07:58 IST" duration-ms="8037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsAgreementRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:07:58 IST" name="tearDown" finished-at="2025-01-28T12:08:00 IST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:00 IST" name="setup" finished-at="2025-01-28T12:08:02 IST" duration-ms="1312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTermsPDF()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:02 IST" name="setUpTest" finished-at="2025-01-28T12:08:08 IST" duration-ms="5885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTermsPDF()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTermsPDF()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:08 IST" name="verifyTermsPDF" description="This test verifies that Terms PDF is opened in a separate tab" finished-at="2025-01-28T12:08:08 IST" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsPDF -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:08 IST" name="tearDown" finished-at="2025-01-28T12:08:09 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:09 IST" name="setup" finished-at="2025-01-28T12:08:10 IST" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTextBoxDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:10 IST" name="setUpTest" finished-at="2025-01-28T12:08:14 IST" duration-ms="3814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTextBoxDisable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTextBoxDisable()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:14 IST" name="verifyTextBoxDisable" description="This test verifies that the text box for &#039;Last Name&#039; field turns inactive after clicking on checkbox" finished-at="2025-01-28T12:08:14 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextBoxDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:14 IST" name="tearDown" finished-at="2025-01-28T12:08:14 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:14 IST" name="setup" finished-at="2025-01-28T12:08:15 IST" duration-ms="1217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTexts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:15 IST" name="setUpTest" finished-at="2025-01-28T12:08:18 IST" duration-ms="2885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTexts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTexts()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:18 IST" name="verifyTexts" description="This test verifies that expected texts are displayed at the top of the page" finished-at="2025-01-28T12:08:18 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTexts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:18 IST" name="tearDown" finished-at="2025-01-28T12:08:18 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:18 IST" name="setup" finished-at="2025-01-28T12:08:20 IST" duration-ms="1242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:20 IST" name="setUpTest" finished-at="2025-01-28T12:08:24 IST" duration-ms="4237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTitle()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:24 IST" name="verifyTitle" description="This test verifies that the Registration page title is correct" finished-at="2025-01-28T12:08:24 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:24 IST" name="tearDown" finished-at="2025-01-28T12:08:24 IST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:24 IST" name="setup" finished-at="2025-01-28T12:08:25 IST" duration-ms="1302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUSNRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:25 IST" name="setUpTest" finished-at="2025-01-28T12:08:28 IST" duration-ms="2539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUSNRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUSNRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:28 IST" name="verifyUSNRequired" description="This test verifies that validation error occurs for required field: &#039;USN / Registration Number&#039;" finished-at="2025-01-28T12:08:32 IST" duration-ms="4315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUSNRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:32 IST" name="tearDown" finished-at="2025-01-28T12:08:32 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:32 IST" name="setup" finished-at="2025-01-28T12:08:34 IST" duration-ms="1213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUsedEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:34 IST" name="setUpTest" finished-at="2025-01-28T12:08:38 IST" duration-ms="4548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUsedEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUsedEmail()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:38 IST" name="verifyUsedEmail" description="This test verifies that validation error for same email occursfor &#039;Email&#039; field" finished-at="2025-01-28T12:08:45 IST" duration-ms="6994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsedEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:45 IST" name="tearDown" finished-at="2025-01-28T12:08:45 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:45 IST" name="setup" finished-at="2025-01-28T12:08:47 IST" duration-ms="1552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyYearRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:47 IST" name="setUpTest" finished-at="2025-01-28T12:08:51 IST" duration-ms="4444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyYearRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyYearRequired()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:51 IST" name="verifyYearRequired" description="This test verifies that validation error occurs for required field: &#039;Expected Graduation Year&#039;" finished-at="2025-01-28T12:08:56 IST" duration-ms="4228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYearRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:56 IST" name="tearDown" finished-at="2025-01-28T12:08:56 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:56 IST" name="setup" finished-at="2025-01-28T12:08:57 IST" duration-ms="1421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyYearSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:08:57 IST" name="setUpTest" finished-at="2025-01-28T12:09:02 IST" duration-ms="4197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyYearSelect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyYearSelect()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:02 IST" name="verifyYearSelect" description="This test verifies that year can be selected from the dropdown" finished-at="2025-01-28T12:09:02 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYearSelect -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:02 IST" name="tearDown" finished-at="2025-01-28T12:09:02 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:02 IST" name="setup" finished-at="2025-01-28T12:09:03 IST" duration-ms="1367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUserRegistration() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:03 IST" name="setUpTest" finished-at="2025-01-28T12:09:05 IST" duration-ms="1367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyUserRegistration() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserRegistration()[pri:1, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:05 IST" name="verifyUserRegistration" description="This test verifies that the user can create an account" finished-at="2025-01-28T12:09:15 IST" duration-ms="10705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:15 IST" name="tearDown" finished-at="2025-01-28T12:09:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:15 IST" name="setup" finished-at="2025-01-28T12:09:15 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmail() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:15 IST" name="setUpTest" finished-at="2025-01-28T12:09:21 IST" duration-ms="5718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmail() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmail()[pri:2, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:21 IST" name="verifyEmail" description="This test verifies that user receives a verification email to the user&#039;s email address" finished-at="2025-01-28T12:09:23 IST" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:23 IST" name="tearDown" finished-at="2025-01-28T12:09:23 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:23 IST" name="setUpTest" finished-at="2025-01-28T12:09:27 IST" duration-ms="3715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailPageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:23 IST" name="setup" finished-at="2025-01-28T12:09:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailPageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyEmailPageTitle()[pri:3, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:27 IST" name="verifyEmailPageTitle" description="This test verifies that expected text for headline is displayed on the Email Verification page" finished-at="2025-01-28T12:09:27 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:27 IST" name="tearDown" finished-at="2025-01-28T12:09:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:27 IST" name="setup" finished-at="2025-01-28T12:09:27 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:27 IST" name="setUpTest" finished-at="2025-01-28T12:09:31 IST" duration-ms="4615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailAddress()[pri:4, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:31 IST" name="verifyEmailAddress" description="This test verifies that the email address displayed on the Email Verification page is correct" finished-at="2025-01-28T12:09:31 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailAddress -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:31 IST" name="setup" finished-at="2025-01-28T12:09:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailResend() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:31 IST" name="tearDown" finished-at="2025-01-28T12:09:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:31 IST" name="setUpTest" finished-at="2025-01-28T12:09:35 IST" duration-ms="3928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailResend() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailResend()[pri:5, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:35 IST" name="verifyEmailResend" description="This test verifies that the email is resent after clicking on &#039;Resend&#039; link" finished-at="2025-01-28T12:09:38 IST" duration-ms="2479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailResend -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:38 IST" name="setup" finished-at="2025-01-28T12:09:38 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailVerificationLink() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:38 IST" name="tearDown" finished-at="2025-01-28T12:09:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUpTest(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:38 IST" name="setUpTest" finished-at="2025-01-28T12:09:44 IST" duration-ms="6098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Registration.verifyEmailVerificationLink() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailVerificationLink()[pri:6, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:44 IST" name="verifyEmailVerificationLink" description="This test verifies that the link mentioned in the mail redirects user to the profile preview page of his/her account" finished-at="2025-01-28T12:09:53 IST" duration-ms="8768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailVerificationLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Registration@2b9ed6da]" started-at="2025-01-28T12:09:53 IST" name="tearDown" finished-at="2025-01-28T12:09:53 IST" duration-ms="399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.user.Registration -->
      <class name="com.zenken.freshers.user.Companies">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:03:37 IST" name="setup" finished-at="2025-01-28T12:03:40 IST" duration-ms="2243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyComAnchorLink() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:03:40 IST" name="setupCom" finished-at="2025-01-28T12:05:41 IST" duration-ms="121280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyComAnchorLink()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:41 IST" name="verifyComAnchorLink" description="This test verifies that user is navigated to respective sectionsafter clicking on their anchor links" finished-at="2025-01-28T12:05:42 IST" duration-ms="928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComAnchorLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:42 IST" name="tearDown" finished-at="2025-01-28T12:05:42 IST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:42 IST" name="setup" finished-at="2025-01-28T12:05:44 IST" duration-ms="1535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyComImages() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:44 IST" name="setupCom" finished-at="2025-01-28T12:05:50 IST" duration-ms="6300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyComImages()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:50 IST" name="verifyComImages" description="This test verifies that the images uploaded for company logo and header images in Admin account are displayed accrodingly" finished-at="2025-01-28T12:05:55 IST" duration-ms="4341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComImages -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:55 IST" name="tearDown" finished-at="2025-01-28T12:05:55 IST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:55 IST" name="setup" finished-at="2025-01-28T12:05:56 IST" duration-ms="1329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyComPageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:05:56 IST" name="setupCom" finished-at="2025-01-28T12:06:00 IST" duration-ms="3746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyComPageTitle()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:00 IST" name="verifyComPageTitle" description="This test verifies that expected Companies page title is displayed" finished-at="2025-01-28T12:06:00 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:00 IST" name="tearDown" finished-at="2025-01-28T12:06:00 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:00 IST" name="setup" finished-at="2025-01-28T12:06:02 IST" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyComUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:02 IST" name="setupCom" finished-at="2025-01-28T12:06:04 IST" duration-ms="2307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyComUrl()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:04 IST" name="verifyComUrl" description="This test verifies that user is redirected to Companies page" finished-at="2025-01-28T12:06:08 IST" duration-ms="3895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:08 IST" name="tearDown" finished-at="2025-01-28T12:06:08 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:08 IST" name="setup" finished-at="2025-01-28T12:06:10 IST" duration-ms="1320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyComValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:10 IST" name="setupCom" finished-at="2025-01-28T12:06:13 IST" duration-ms="3606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyComValues()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:13 IST" name="verifyComValues" description="This test verifies that the Companies page is updated and expected values are displayed as they had been set in Admin account" finished-at="2025-01-28T12:06:42 IST" duration-ms="28566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComValues -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:42 IST" name="tearDown" finished-at="2025-01-28T12:06:42 IST" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:42 IST" name="setup" finished-at="2025-01-28T12:06:44 IST" duration-ms="1724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Companies.verifyCompWebSite()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupCom()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:44 IST" name="setupCom" finished-at="2025-01-28T12:06:46 IST" duration-ms="2362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupCom -->
        <test-method signature="verifyCompWebSite()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:46 IST" name="verifyCompWebSite" description="This test verifies that the company&#039;s website link is opened in a separate tab when clicked" finished-at="2025-01-28T12:06:54 IST" depends-on-methods="com.zenken.freshers.user.Companies.verifyComValues" duration-ms="7511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompWebSite -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Companies@421e361]" started-at="2025-01-28T12:06:54 IST" name="tearDown" finished-at="2025-01-28T12:06:54 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.user.Companies -->
      <class name="com.zenken.freshers.user.JobsApply">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:03:37 IST" name="setup" finished-at="2025-01-28T12:03:40 IST" duration-ms="2248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplicationDeadline() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:03:40 IST" name="setupJobsApply" finished-at="2025-01-28T12:04:10 IST" duration-ms="30590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplicationDeadline()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:04:10 IST" name="verifyApplicationDeadline" description="This test verifies that the application deadline (date and time) displayed on Apply area is in expected format and in IST" finished-at="2025-01-28T12:04:55 IST" duration-ms="44396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplicationDeadline -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:04:55 IST" name="tearDown" finished-at="2025-01-28T12:04:55 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:04:55 IST" name="setup" finished-at="2025-01-28T12:04:56 IST" duration-ms="1346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyAreaDisplay()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:04:56 IST" name="setupJobsApply" finished-at="2025-01-28T12:05:02 IST" duration-ms="5895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyAreaDisplay()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:02 IST" name="verifyApplyAreaDisplay" description="This test verifies that apply area is not displayed when the user has not logged in" finished-at="2025-01-28T12:05:05 IST" duration-ms="2498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyAreaDisplay -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:05 IST" name="tearDown" finished-at="2025-01-28T12:05:05 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:05 IST" name="setup" finished-at="2025-01-28T12:05:06 IST" duration-ms="1336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyAreaText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:06 IST" name="setupJobsApply" finished-at="2025-01-28T12:05:11 IST" duration-ms="4364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyAreaText()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:11 IST" name="verifyApplyAreaText" description="This test verifies that expected text is displayed on apply frame when application period has not started/has ended" finished-at="2025-01-28T12:05:19 IST" duration-ms="8474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyAreaText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:19 IST" name="tearDown" finished-at="2025-01-28T12:05:19 IST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:19 IST" name="setup" finished-at="2025-01-28T12:05:21 IST" duration-ms="1268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyNotAllowed1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:21 IST" name="setupJobsApply" finished-at="2025-01-28T12:05:27 IST" duration-ms="6109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyNotAllowed1()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:27 IST" name="verifyApplyNotAllowed1" description="This test verifies that user is redirected to job details page when user tries to directly access the apply form URL when user&#039;s profile is incomplete" finished-at="2025-01-28T12:05:37 IST" duration-ms="10021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyNotAllowed1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:37 IST" name="tearDown" finished-at="2025-01-28T12:05:37 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:37 IST" name="setup" finished-at="2025-01-28T12:05:38 IST" duration-ms="1320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyProfileCompletePopup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:38 IST" name="setupJobsApply" finished-at="2025-01-28T12:05:44 IST" duration-ms="5344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyProfileCompletePopup()[pri:1, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:44 IST" name="verifyProfileCompletePopup" description="This test verifies that the popup prompting to complete the profile is displayed after clicking on &#039;Apply&#039; when user&#039;s profile is incomplete" finished-at="2025-01-28T12:05:51 IST" duration-ms="7691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProfileCompletePopup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:51 IST" name="tearDown" finished-at="2025-01-28T12:05:52 IST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:52 IST" name="setup" finished-at="2025-01-28T12:05:54 IST" duration-ms="2147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyProfilePageURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:05:54 IST" name="setupJobsApply" finished-at="2025-01-28T12:06:01 IST" duration-ms="7200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyProfilePageURL()[pri:2, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:06:01 IST" name="verifyProfilePageURL" description="This test verifies that user is redirected to profile preview page after clicking on &#039;Edit Profile&#039; on the popup" finished-at="2025-01-28T12:06:12 IST" duration-ms="10925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProfilePageURL -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:06:12 IST" name="tearDown" finished-at="2025-01-28T12:06:12 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:06:12 IST" name="setup" finished-at="2025-01-28T12:06:14 IST" duration-ms="1418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:06:14 IST" name="setupJobsApply" finished-at="2025-01-28T12:06:17 IST" duration-ms="3156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method retried="true" signature="verifyFinalConfPopup1()[pri:3, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:06:17 IST" name="verifyFinalConfPopup1" description="This test verifies that the final confirmation popup is displayed after clicking on &#039;Apply&#039; when user&#039;s profile is complete" finished-at="2025-01-28T12:07:39 IST" duration-ms="81903" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at com.zenken.freshers.user.JobsApply.fillProfile(JobsApply.java:380)
at com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1(JobsApply.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFinalConfPopup1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:07:39 IST" name="tearDown" finished-at="2025-01-28T12:07:39 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:07:39 IST" name="setup" finished-at="2025-01-28T12:07:40 IST" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:07:40 IST" name="setupJobsApply" finished-at="2025-01-28T12:07:45 IST" duration-ms="4663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method retried="true" signature="verifyFinalConfPopup1()[pri:3, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:07:45 IST" name="verifyFinalConfPopup1" description="This test verifies that the final confirmation popup is displayed after clicking on &#039;Apply&#039; when user&#039;s profile is complete" finished-at="2025-01-28T12:08:09 IST" duration-ms="23985" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//img[@alt='Edit icon'])[3]"}
  (Session info: chrome=131.0.6778.267)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3a1e2bba20802e104e3d59ef311609d1, findElement {value=(//img[@alt='Edit icon'])[3], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.267, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\Users\prasa\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49214}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49214/devtoo..., se:cdpVersion: 131.0.6778.267, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a1e2bba20802e104e3d59ef311609d1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//img[@alt='Edit icon'])[3]"}
  (Session info: chrome=131.0.6778.267)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3a1e2bba20802e104e3d59ef311609d1, findElement {value=(//img[@alt='Edit icon'])[3], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.267, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\Users\prasa\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49214}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49214/devtoo..., se:cdpVersion: 131.0.6778.267, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a1e2bba20802e104e3d59ef311609d1
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:48)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:474)
at com.zenken.frehsers.abstractcomponents.WebDriverUtils.clickByJavaScript(WebDriverUtils.java:99)
at com.zenken.freshers.pages.user.ProfilePreviewPage.clickEdit(ProfilePreviewPage.java:326)
at com.zenken.freshers.user.JobsApply.fillProfile(JobsApply.java:362)
at com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1(JobsApply.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFinalConfPopup1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:09 IST" name="tearDown" finished-at="2025-01-28T12:08:10 IST" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:10 IST" name="setup" finished-at="2025-01-28T12:08:11 IST" duration-ms="1503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:11 IST" name="setupJobsApply" finished-at="2025-01-28T12:08:17 IST" duration-ms="6257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyFinalConfPopup1()[pri:3, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:17 IST" name="verifyFinalConfPopup1" description="This test verifies that the final confirmation popup is displayed after clicking on &#039;Apply&#039; when user&#039;s profile is complete" finished-at="2025-01-28T12:08:25 IST" duration-ms="8031" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"[class*='u-w-90']"}
  (Session info: chrome=131.0.6778.267)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2a4ae20e030ce9c3aa48bd87d530e774, findElement {value=[class*='u-w-90'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.267, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\Users\prasa\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49764}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49764/devtoo..., se:cdpVersion: 131.0.6778.267, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2a4ae20e030ce9c3aa48bd87d530e774]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"[class*='u-w-90']"}
  (Session info: chrome=131.0.6778.267)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2a4ae20e030ce9c3aa48bd87d530e774, findElement {value=[class*='u-w-90'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.267, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\Users\prasa\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49764}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49764/devtoo..., se:cdpVersion: 131.0.6778.267, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2a4ae20e030ce9c3aa48bd87d530e774
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.zenken.freshers.pages.user.EditPhotoPage.clickUploadPhoto(EditPhotoPage.java:71)
at com.zenken.freshers.user.JobsApply.fillProfile(JobsApply.java:355)
at com.zenken.freshers.user.JobsApply.verifyFinalConfPopup1(JobsApply.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFinalConfPopup1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:26 IST" name="tearDown" finished-at="2025-01-28T12:08:28 IST" duration-ms="2210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:28 IST" name="setup" finished-at="2025-01-28T12:08:30 IST" duration-ms="1947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyJobApplication1() throws com.mailslurp.clients.ApiException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:30 IST" name="setupJobsApply" finished-at="2025-01-28T12:08:39 IST" duration-ms="8299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method retried="true" signature="verifyJobApplication1()[pri:4, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:39 IST" name="verifyJobApplication1" description="This test verifies that user is successfully able to apply to the job" finished-at="2025-01-28T12:08:54 IST" duration-ms="15292" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://freshers.dspf-dev.com/jobs/b5dbad9e/] but found [https://freshers.dspf-dev.com/mypage/profile/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://freshers.dspf-dev.com/jobs/b5dbad9e/] but found [https://freshers.dspf-dev.com/mypage/profile/]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.zenken.freshers.user.JobsApply.verifyJobApplication1(JobsApply.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobApplication1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:54 IST" name="tearDown" finished-at="2025-01-28T12:08:54 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:54 IST" name="setup" finished-at="2025-01-28T12:08:55 IST" duration-ms="1298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyJobApplication1() throws com.mailslurp.clients.ApiException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:08:55 IST" name="setupJobsApply" finished-at="2025-01-28T12:09:03 IST" duration-ms="7684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyJobApplication1()[pri:4, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:03 IST" name="verifyJobApplication1" description="This test verifies that user is successfully able to apply to the job" finished-at="2025-01-28T12:09:23 IST" duration-ms="19937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobApplication1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:23 IST" name="tearDown" finished-at="2025-01-28T12:09:23 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:23 IST" name="setup" finished-at="2025-01-28T12:09:25 IST" duration-ms="1309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyMailReception1() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:25 IST" name="setupJobsApply" finished-at="2025-01-28T12:09:31 IST" duration-ms="6257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyMailReception1()[pri:5, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:31 IST" name="verifyApplyMailReception1" description="This test verifies that the user receives an expected email after applying to the job and that the mail content is correct" finished-at="2025-01-28T12:09:35 IST" duration-ms="3785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyMailReception1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:35 IST" name="tearDown" finished-at="2025-01-28T12:09:35 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:35 IST" name="setup" finished-at="2025-01-28T12:09:36 IST" duration-ms="1259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyNotAllowed2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:36 IST" name="setupJobsApply" finished-at="2025-01-28T12:09:43 IST" duration-ms="7156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyNotAllowed2()[pri:6, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:43 IST" name="verifyApplyNotAllowed2" description="This test verifies that user is redirected to job details page when user tries to directly access the apply form URL for 募集期間外 case" finished-at="2025-01-28T12:09:56 IST" duration-ms="12709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyNotAllowed2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:56 IST" name="tearDown" finished-at="2025-01-28T12:09:56 IST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:56 IST" name="setup" finished-at="2025-01-28T12:09:57 IST" duration-ms="1161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyFormURL()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:09:57 IST" name="setupJobsApply" finished-at="2025-01-28T12:10:03 IST" duration-ms="5441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyFormURL()[pri:7, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:03 IST" name="verifyApplyFormURL" description="This test verifies that the user is redirected to Apply Form page upon clicking on &#039;Apply&#039; when user&#039;s profile is complete" finished-at="2025-01-28T12:10:14 IST" duration-ms="11194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyFormURL -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:14 IST" name="tearDown" finished-at="2025-01-28T12:10:14 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:14 IST" name="setup" finished-at="2025-01-28T12:10:16 IST" duration-ms="1170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyFormText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:16 IST" name="setupJobsApply" finished-at="2025-01-28T12:10:19 IST" duration-ms="3331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyFormText()[pri:8, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:19 IST" name="verifyApplyFormText" description="This test verifies that the fixed text and the free text set by CS displayed on application form page are correct" finished-at="2025-01-28T12:10:28 IST" duration-ms="9235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyFormText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:28 IST" name="tearDown" finished-at="2025-01-28T12:10:28 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:28 IST" name="setup" finished-at="2025-01-28T12:10:30 IST" duration-ms="1203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyFormCancel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:30 IST" name="setupJobsApply" finished-at="2025-01-28T12:10:31 IST" duration-ms="1851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyFormCancel()[pri:9, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:31 IST" name="verifyApplyFormCancel" description="This test verifies that user is redirected to job details page upon clicking on &#039;Cancel&#039; on application form page" finished-at="2025-01-28T12:10:44 IST" duration-ms="12915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyFormCancel -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:44 IST" name="tearDown" finished-at="2025-01-28T12:10:45 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:45 IST" name="setup" finished-at="2025-01-28T12:10:46 IST" duration-ms="1146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyFormMandatoryFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:46 IST" name="setupJobsApply" finished-at="2025-01-28T12:10:52 IST" duration-ms="6017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyFormMandatoryFields()[pri:10, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:10:52 IST" name="verifyApplyFormMandatoryFields" description="This test verifies that validation error occurs when user tries to apply without filling in mandatory fields" finished-at="2025-01-28T12:11:11 IST" duration-ms="18762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyFormMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:11 IST" name="tearDown" finished-at="2025-01-28T12:11:11 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:11 IST" name="setup" finished-at="2025-01-28T12:11:12 IST" duration-ms="1252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyFormCharExceed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:12 IST" name="setupJobsApply" finished-at="2025-01-28T12:11:17 IST" duration-ms="5016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyFormCharExceed()[pri:11, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:17 IST" name="verifyApplyFormCharExceed" description="This test verifies that validation error occurs when more than 5000 characters are entered in the text box on application form page" finished-at="2025-01-28T12:11:30 IST" duration-ms="12872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyFormCharExceed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:30 IST" name="tearDown" finished-at="2025-01-28T12:11:30 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:30 IST" name="setup" finished-at="2025-01-28T12:11:31 IST" duration-ms="1126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyFinalConfPopup2() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:31 IST" name="setupJobsApply" finished-at="2025-01-28T12:11:37 IST" duration-ms="6032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyFinalConfPopup2()[pri:12, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:37 IST" name="verifyFinalConfPopup2" description="This test verifies that the final confirmation popup is displayed after clicking on &#039;Apply&#039; when application form is filled with valid inputs" finished-at="2025-01-28T12:11:47 IST" duration-ms="9901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFinalConfPopup2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:47 IST" name="tearDown" finished-at="2025-01-28T12:11:47 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:47 IST" name="setup" finished-at="2025-01-28T12:11:49 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyJobApplication2() throws com.mailslurp.clients.ApiException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:49 IST" name="setupJobsApply" finished-at="2025-01-28T12:11:55 IST" duration-ms="6340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyJobApplication2()[pri:13, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:11:55 IST" name="verifyJobApplication2" description="This test verifies that user is successfully able to apply to the jobfrom application form page" finished-at="2025-01-28T12:12:12 IST" duration-ms="17018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobApplication2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:12 IST" name="tearDown" finished-at="2025-01-28T12:12:12 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:12 IST" name="setup" finished-at="2025-01-28T12:12:14 IST" duration-ms="1204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyMailReception2() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:14 IST" name="setupJobsApply" finished-at="2025-01-28T12:12:16 IST" duration-ms="2517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyMailReception2()[pri:14, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:16 IST" name="verifyApplyMailReception2" description="This test verifies that the user receives an expected email after applying to the job and that the mail content is correct" finished-at="2025-01-28T12:12:17 IST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyMailReception2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:17 IST" name="tearDown" finished-at="2025-01-28T12:12:17 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:17 IST" name="setup" finished-at="2025-01-28T12:12:18 IST" duration-ms="1156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.JobsApply.verifyApplyNotAllowed3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobsApply()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:18 IST" name="setupJobsApply" finished-at="2025-01-28T12:12:23 IST" duration-ms="4240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobsApply -->
        <test-method signature="verifyApplyNotAllowed3()[pri:15, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:23 IST" name="verifyApplyNotAllowed3" description="This test verifies that user is redirected to job details page when user tries to directly access the apply form URL for already applied job" finished-at="2025-01-28T12:12:29 IST" duration-ms="5883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApplyNotAllowed3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.JobsApply@64e7619d]" started-at="2025-01-28T12:12:29 IST" name="tearDown" finished-at="2025-01-28T12:12:29 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.user.JobsApply -->
      <class name="com.zenken.freshers.user.Login">
        <test-method is-config="true" signature="generatePass()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:28 IST" name="generatePass" finished-at="2025-01-28T12:08:28 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generatePass -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:28 IST" name="setup" finished-at="2025-01-28T12:08:30 IST" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyCreateAccountUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:30 IST" name="setUpTest" finished-at="2025-01-28T12:08:37 IST" duration-ms="6291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyCreateAccountUrl()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCreateAccountUrl()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:37 IST" name="verifyCreateAccountUrl" description="This test verifies that user is redirected to Registration page" finished-at="2025-01-28T12:08:39 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateAccountUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:39 IST" name="tearDown" finished-at="2025-01-28T12:08:39 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:39 IST" name="setup" finished-at="2025-01-28T12:08:40 IST" duration-ms="1256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyCredentialsMismatch()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:40 IST" name="setUpTest" finished-at="2025-01-28T12:08:46 IST" duration-ms="5308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyCredentialsMismatch()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyCredentialsMismatch()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:46 IST" name="verifyCredentialsMismatch" description="This test verifies that validation error occurs when password entered is incorrect" finished-at="2025-01-28T12:08:51 IST" duration-ms="5584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCredentialsMismatch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:51 IST" name="tearDown" finished-at="2025-01-28T12:08:51 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:51 IST" name="setup" finished-at="2025-01-28T12:08:53 IST" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyEmailRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:53 IST" name="setUpTest" finished-at="2025-01-28T12:08:55 IST" duration-ms="2575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyEmailRequired()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailRequired()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:55 IST" name="verifyEmailRequired" description="This test verifies that validation error occurs when &#039;Email&#039; field is left blank" finished-at="2025-01-28T12:08:57 IST" duration-ms="1514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:57 IST" name="tearDown" finished-at="2025-01-28T12:08:57 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:57 IST" name="setup" finished-at="2025-01-28T12:08:59 IST" duration-ms="1483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyEmailRequiredOnForgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:08:59 IST" name="setUpTest" finished-at="2025-01-28T12:09:01 IST" duration-ms="2787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyEmailRequiredOnForgotPasswordPage()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyEmailRequiredOnForgotPasswordPage()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:01 IST" name="verifyEmailRequiredOnForgotPasswordPage" description="This test verifies that validation error occurs when &#039;Email&#039; field is left blank on Forgot Password page" finished-at="2025-01-28T12:09:08 IST" duration-ms="6261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailRequiredOnForgotPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:08 IST" name="tearDown" finished-at="2025-01-28T12:09:08 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:08 IST" name="setup" finished-at="2025-01-28T12:09:09 IST" duration-ms="1348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyForgotPasswordPageHeadline()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:09 IST" name="setUpTest" finished-at="2025-01-28T12:09:10 IST" duration-ms="897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyForgotPasswordPageHeadline()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyForgotPasswordPageHeadline()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:10 IST" name="verifyForgotPasswordPageHeadline" description="This test verifies that expected text for headline is displayed on Forgot Password page" finished-at="2025-01-28T12:09:15 IST" duration-ms="4409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordPageHeadline -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:15 IST" name="tearDown" finished-at="2025-01-28T12:09:15 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:15 IST" name="setup" finished-at="2025-01-28T12:09:16 IST" duration-ms="1303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyForgotPasswordPageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:16 IST" name="setUpTest" finished-at="2025-01-28T12:09:21 IST" duration-ms="4888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyForgotPasswordPageTitle()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyForgotPasswordPageTitle()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:21 IST" name="verifyForgotPasswordPageTitle" description="This test verifies that Forgot Password page title is correct" finished-at="2025-01-28T12:09:22 IST" duration-ms="1441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:22 IST" name="tearDown" finished-at="2025-01-28T12:09:22 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:22 IST" name="setup" finished-at="2025-01-28T12:09:24 IST" duration-ms="1247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyForgotPasswordUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:24 IST" name="setUpTest" finished-at="2025-01-28T12:09:27 IST" duration-ms="3573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyForgotPasswordUrl()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyForgotPasswordUrl()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:27 IST" name="verifyForgotPasswordUrl" description="This test verifies that user is redirected to Forgot Password page" finished-at="2025-01-28T12:09:29 IST" duration-ms="2210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:29 IST" name="tearDown" finished-at="2025-01-28T12:09:30 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:30 IST" name="setup" finished-at="2025-01-28T12:09:31 IST" duration-ms="1210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyHeadLineText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:31 IST" name="setUpTest" finished-at="2025-01-28T12:09:34 IST" duration-ms="3387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyHeadLineText()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyHeadLineText()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:34 IST" name="verifyHeadLineText" description="This test verifies that expected headline is displayed on Login page" finished-at="2025-01-28T12:09:34 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeadLineText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:34 IST" name="tearDown" finished-at="2025-01-28T12:09:34 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:34 IST" name="setup" finished-at="2025-01-28T12:09:36 IST" duration-ms="1288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:36 IST" name="setUpTest" finished-at="2025-01-28T12:09:39 IST" duration-ms="3436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidEmail()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidEmail()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:39 IST" name="verifyInvalidEmail" description="This test verifies that validation error occurs when invalid email is entered" finished-at="2025-01-28T12:09:43 IST" duration-ms="4268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:43 IST" name="tearDown" finished-at="2025-01-28T12:09:44 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:44 IST" name="setup" finished-at="2025-01-28T12:09:45 IST" duration-ms="1366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidEmailOnForgotPasswordPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:45 IST" name="setUpTest" finished-at="2025-01-28T12:09:50 IST" duration-ms="4967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidEmailOnForgotPasswordPage()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidEmailOnForgotPasswordPage()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:50 IST" name="verifyInvalidEmailOnForgotPasswordPage" description="This test verifies that validation error occurs when an invalid email is entered in &#039;Email&#039; field on Forgot Password page" finished-at="2025-01-28T12:09:54 IST" duration-ms="4449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmailOnForgotPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:54 IST" name="tearDown" finished-at="2025-01-28T12:09:55 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:55 IST" name="setup" finished-at="2025-01-28T12:09:56 IST" duration-ms="1265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidPassword1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:56 IST" name="setUpTest" finished-at="2025-01-28T12:09:58 IST" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidPassword1()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidPassword1()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:09:58 IST" name="verifyInvalidPassword1" description="This test verifies that a validation error occurs for the &#039;Password&#039; field when fewer than 8 characters are entered on Reset Password page" finished-at="2025-01-28T12:10:01 IST" duration-ms="3817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPassword1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:01 IST" name="tearDown" finished-at="2025-01-28T12:10:02 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:02 IST" name="setup" finished-at="2025-01-28T12:10:03 IST" duration-ms="1193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidPassword2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:03 IST" name="setUpTest" finished-at="2025-01-28T12:10:06 IST" duration-ms="3610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidPassword2()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidPassword2()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:06 IST" name="verifyInvalidPassword2" description="This test verifies that a validation error occurs for the &#039;Password&#039; field  on Reset Password page when password entered does not contain a number" finished-at="2025-01-28T12:10:13 IST" duration-ms="6526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPassword2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:13 IST" name="tearDown" finished-at="2025-01-28T12:10:13 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:13 IST" name="setup" finished-at="2025-01-28T12:10:14 IST" duration-ms="1237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidPassword3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:14 IST" name="setUpTest" finished-at="2025-01-28T12:10:16 IST" duration-ms="1644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidPassword3()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidPassword3()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:16 IST" name="verifyInvalidPassword3" description="This test verifies that a validation error occurs for the &#039;Password&#039; field on Reset Password page when password entered does not contain any uppercase character" finished-at="2025-01-28T12:10:21 IST" duration-ms="5274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPassword3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:21 IST" name="tearDown" finished-at="2025-01-28T12:10:21 IST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:21 IST" name="setup" finished-at="2025-01-28T12:10:23 IST" duration-ms="1249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidPassword4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:23 IST" name="setUpTest" finished-at="2025-01-28T12:10:24 IST" duration-ms="1523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidPassword4()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidPassword4()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:24 IST" name="verifyInvalidPassword4" description="This test verifies that a validation error occurs for the &#039;Password&#039; field on Reset Password page when password entered does not any special characters" finished-at="2025-01-28T12:10:29 IST" duration-ms="5293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPassword4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:29 IST" name="tearDown" finished-at="2025-01-28T12:10:30 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:30 IST" name="setup" finished-at="2025-01-28T12:10:31 IST" duration-ms="1317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyInvalidToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:31 IST" name="setUpTest" finished-at="2025-01-28T12:10:34 IST" duration-ms="2724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyInvalidToken()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyInvalidToken()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:34 IST" name="verifyInvalidToken" description="This test verifies that a validation error occurs on Reset Password page when the token in the URL has expired" finished-at="2025-01-28T12:10:40 IST" duration-ms="6146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidToken -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:40 IST" name="tearDown" finished-at="2025-01-28T12:10:40 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:40 IST" name="setup" finished-at="2025-01-28T12:10:41 IST" duration-ms="1272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyNonExistentEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:41 IST" name="setUpTest" finished-at="2025-01-28T12:10:44 IST" duration-ms="2323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyNonExistentEmail()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyNonExistentEmail()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:44 IST" name="verifyNonExistentEmail" description="This test verifies that validation error occurs when email entered in &#039;Email&#039; field does not exist on Forgot Password page" finished-at="2025-01-28T12:10:46 IST" duration-ms="2052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNonExistentEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:46 IST" name="tearDown" finished-at="2025-01-28T12:10:46 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:46 IST" name="setup" finished-at="2025-01-28T12:10:47 IST" duration-ms="1215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordRequired()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:47 IST" name="setUpTest" finished-at="2025-01-28T12:10:50 IST" duration-ms="2411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordRequired()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordRequired()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:50 IST" name="verifyPasswordRequired" description="This test verifies that validation error occurs when &#039;Password&#039; field is left blank" finished-at="2025-01-28T12:10:53 IST" duration-ms="3012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordRequired -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:53 IST" name="tearDown" finished-at="2025-01-28T12:10:53 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:53 IST" name="setup" finished-at="2025-01-28T12:10:54 IST" duration-ms="1229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifySamePassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:54 IST" name="setUpTest" finished-at="2025-01-28T12:10:59 IST" duration-ms="4528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifySamePassword()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifySamePassword()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:10:59 IST" name="verifySamePassword" description="This test verifies that a validation error occurs on Reset Password page when the same password as previous is entered" finished-at="2025-01-28T12:11:04 IST" duration-ms="5287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:04 IST" name="tearDown" finished-at="2025-01-28T12:11:04 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:04 IST" name="setup" finished-at="2025-01-28T12:11:05 IST" duration-ms="1184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:05 IST" name="setUpTest" finished-at="2025-01-28T12:11:08 IST" duration-ms="2392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyTitle()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyTitle()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:08 IST" name="verifyTitle" description="This test verifies that Login page title is correct" finished-at="2025-01-28T12:11:08 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:08 IST" name="tearDown" finished-at="2025-01-28T12:11:08 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:08 IST" name="setup" finished-at="2025-01-28T12:11:09 IST" duration-ms="1158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyUserLogIn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:09 IST" name="setUpTest" finished-at="2025-01-28T12:11:13 IST" duration-ms="3780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyUserLogIn()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserLogIn()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:13 IST" name="verifyUserLogIn" description="This test verifies that user is able to login successfully to his/her account" finished-at="2025-01-28T12:11:19 IST" duration-ms="6569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLogIn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:19 IST" name="tearDown" finished-at="2025-01-28T12:11:20 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:20 IST" name="setup" finished-at="2025-01-28T12:11:21 IST" duration-ms="1229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordResetMailSend()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:21 IST" name="setUpTest" finished-at="2025-01-28T12:11:24 IST" duration-ms="3375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordResetMailSend()[pri:1, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordResetMailSend()[pri:1, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:24 IST" name="verifyPasswordResetMailSend" description="This test verifies that alert is displayed upon clicking on &#039;Send&#039; button on Forgot Password page" finished-at="2025-01-28T12:11:29 IST" duration-ms="4959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordResetMailSend -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:29 IST" name="tearDown" finished-at="2025-01-28T12:11:29 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:29 IST" name="setup" finished-at="2025-01-28T12:11:31 IST" duration-ms="1335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifySameMailSendWithinMinute()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:31 IST" name="setUpTest" finished-at="2025-01-28T12:11:34 IST" duration-ms="3739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifySameMailSendWithinMinute()[pri:2, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifySameMailSendWithinMinute()[pri:2, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:34 IST" name="verifySameMailSendWithinMinute" description="This test verifies that validation error occurs when user tries to send email again within one minute" finished-at="2025-01-28T12:11:39 IST" duration-ms="5062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySameMailSendWithinMinute -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:39 IST" name="tearDown" finished-at="2025-01-28T12:11:40 IST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:40 IST" name="setup" finished-at="2025-01-28T12:11:41 IST" duration-ms="1375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordResetEmail() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:41 IST" name="setUpTest" finished-at="2025-01-28T12:11:45 IST" duration-ms="3643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordResetEmail()[pri:3, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordResetEmail()[pri:3, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:45 IST" name="verifyPasswordResetEmail" description="This test verifies that user receives the email for resetting the password" finished-at="2025-01-28T12:11:47 IST" duration-ms="1864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordResetEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:47 IST" name="tearDown" finished-at="2025-01-28T12:11:47 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:47 IST" name="setup" finished-at="2025-01-28T12:11:48 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordResetLink() throws com.mailslurp.clients.ApiException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:48 IST" name="setUpTest" finished-at="2025-01-28T12:11:53 IST" duration-ms="5078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordResetLink()[pri:4, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordResetLink()[pri:4, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:53 IST" name="verifyPasswordResetLink" description="This test verifies that the link contained in the email redirects user to Reset Password page" finished-at="2025-01-28T12:11:55 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordResetLink -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:55 IST" name="tearDown" finished-at="2025-01-28T12:11:55 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:55 IST" name="setup" finished-at="2025-01-28T12:11:56 IST" duration-ms="1319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordReset()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:56 IST" name="setUpTest" finished-at="2025-01-28T12:11:59 IST" duration-ms="2789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordReset()[pri:5, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordReset()[pri:5, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:11:59 IST" name="verifyPasswordReset" description="This test verifies that the password can be reset successfully" finished-at="2025-01-28T12:12:06 IST" duration-ms="6902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordReset -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="tearDown" finished-at="2025-01-28T12:12:06 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="setup" finished-at="2025-01-28T12:12:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyPasswordResetCompleteHeadline() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="setUpTest" finished-at="2025-01-28T12:12:06 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyPasswordResetCompleteHeadline()[pri:6, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPasswordResetCompleteHeadline()[pri:6, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="verifyPasswordResetCompleteHeadline" description="This test verifies that expected headline text is displayed on Reset Password Complete page" finished-at="2025-01-28T12:12:06 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordResetCompleteHeadline -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="tearDown" finished-at="2025-01-28T12:12:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="setup" finished-at="2025-01-28T12:12:06 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyLogInUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="setUpTest" finished-at="2025-01-28T12:12:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyLogInUrl()[pri:7, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyLogInUrl()[pri:7, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:06 IST" name="verifyLogInUrl" description="This test verifies that user is redirected to Login page upon clicking on &#039;Log In&#039; button on Reset Password Complete page" finished-at="2025-01-28T12:12:07 IST" duration-ms="1270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogInUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:07 IST" name="tearDown" finished-at="2025-01-28T12:12:08 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:08 IST" name="setup" finished-at="2025-01-28T12:12:09 IST" duration-ms="1168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Login.verifyLogInAfterPasswordChange() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTest(org.testng.ITestResult)[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:09 IST" name="setUpTest" finished-at="2025-01-28T12:12:11 IST" duration-ms="2608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Login.verifyLogInAfterPasswordChange()[pri:8, instance:com.zenken.freshers.user.Login@389c4eb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyLogInAfterPasswordChange()[pri:8, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:11 IST" name="verifyLogInAfterPasswordChange" description="This test verifies that user is able to login into his/her account with the password that has been reset" finished-at="2025-01-28T12:12:14 IST" duration-ms="2641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogInAfterPasswordChange -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Login@389c4eb1]" started-at="2025-01-28T12:12:14 IST" name="tearDown" finished-at="2025-01-28T12:12:14 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.user.Login -->
      <class name="com.zenken.freshers.user.Jobs">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:06:54 IST" name="setup" finished-at="2025-01-28T12:06:55 IST" duration-ms="1312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyCompanyOverviewAnchor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:06:55 IST" name="setupJobs" finished-at="2025-01-28T12:07:39 IST" duration-ms="43499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyCompanyOverviewAnchor()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:39 IST" name="verifyCompanyOverviewAnchor" description="This test verifies that user is navigated to Company Overview section upon clicking on &quot;Company Overview&quot; anchor link" finished-at="2025-01-28T12:07:39 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCompanyOverviewAnchor -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:39 IST" name="tearDown" finished-at="2025-01-28T12:07:39 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:39 IST" name="setup" finished-at="2025-01-28T12:07:41 IST" duration-ms="1637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyCondtionsAnchor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:41 IST" name="setupJobs" finished-at="2025-01-28T12:07:45 IST" duration-ms="4313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyCondtionsAnchor()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:45 IST" name="verifyCondtionsAnchor" description="This test verifies that user is navigated to Condtions section upon clicking on &quot;Condtions&quot; anchor link" finished-at="2025-01-28T12:07:45 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCondtionsAnchor -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:45 IST" name="tearDown" finished-at="2025-01-28T12:07:46 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:46 IST" name="setup" finished-at="2025-01-28T12:07:47 IST" duration-ms="1234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobDetailAnchor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:47 IST" name="setupJobs" finished-at="2025-01-28T12:07:51 IST" duration-ms="4539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobDetailAnchor()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:51 IST" name="verifyJobDetailAnchor" description="This test verifies that user is navigated to Job Details section upon clicking on &quot;Job Detail&quot; anchor link" finished-at="2025-01-28T12:07:52 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobDetailAnchor -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:52 IST" name="tearDown" finished-at="2025-01-28T12:07:52 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:52 IST" name="setup" finished-at="2025-01-28T12:07:53 IST" duration-ms="1262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobsCompaniesUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:53 IST" name="setupJobs" finished-at="2025-01-28T12:07:58 IST" duration-ms="5061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobsCompaniesUrl()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:07:58 IST" name="verifyJobsCompaniesUrl" description="This test verifies that user is redirected to Companies page" finished-at="2025-01-28T12:08:01 IST" duration-ms="3016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobsCompaniesUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:01 IST" name="tearDown" finished-at="2025-01-28T12:08:01 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:01 IST" name="setup" finished-at="2025-01-28T12:08:03 IST" duration-ms="1435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobsPageTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:03 IST" name="setupJobs" finished-at="2025-01-28T12:08:08 IST" duration-ms="5639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobsPageTitle()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:08 IST" name="verifyJobsPageTitle" description="This test verifies that expected Jobs page title is displayed" finished-at="2025-01-28T12:08:08 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobsPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:08 IST" name="tearDown" finished-at="2025-01-28T12:08:09 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:09 IST" name="setup" finished-at="2025-01-28T12:08:10 IST" duration-ms="1374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobsUrl()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:10 IST" name="setupJobs" finished-at="2025-01-28T12:08:14 IST" duration-ms="4267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobsUrl()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:14 IST" name="verifyJobsUrl" description="This test verifies that user is redirected to Jobs page" finished-at="2025-01-28T12:08:16 IST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobsUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:16 IST" name="tearDown" finished-at="2025-01-28T12:08:16 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:16 IST" name="setup" finished-at="2025-01-28T12:08:18 IST" duration-ms="1237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobsValues() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:18 IST" name="setupJobs" finished-at="2025-01-28T12:08:23 IST" duration-ms="4919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobsValues()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:23 IST" name="verifyJobsValues" description="This test verifies that the Jobs page is updated and expected values are displayed as they had been set in Admin account" finished-at="2025-01-28T12:08:24 IST" duration-ms="1535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobsValues -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:24 IST" name="tearDown" finished-at="2025-01-28T12:08:24 IST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:24 IST" name="setup" finished-at="2025-01-28T12:08:26 IST" duration-ms="1307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zenken.freshers.user.Jobs.verifyJobsWarningText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setupJobs()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:26 IST" name="setupJobs" finished-at="2025-01-28T12:08:27 IST" duration-ms="1814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupJobs -->
        <test-method signature="verifyJobsWarningText()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:27 IST" name="verifyJobsWarningText" description="This test verifies that the warning text displayed below the Jobs page is correct" finished-at="2025-01-28T12:08:28 IST" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyJobsWarningText -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.zenken.freshers.user.Jobs@59d4cd39]" started-at="2025-01-28T12:08:28 IST" name="tearDown" finished-at="2025-01-28T12:08:28 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.zenken.freshers.user.Jobs -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
